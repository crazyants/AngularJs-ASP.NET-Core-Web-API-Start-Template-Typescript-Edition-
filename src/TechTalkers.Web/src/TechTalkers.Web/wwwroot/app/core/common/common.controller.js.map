{"version":3,"sources":["app/core/common/common.controller.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CA4ET;AA5ED,WAAO,GAAG;IAAC,IAAA,IAAI,CA4Ed;IA5EU,WAAA,IAAI;QAAC,IAAA,MAAM,CA4ErB;QA5Ee,WAAA,MAAM,EAAC,CAAC;YACpB;gBASI,0BAAY,QAA4B,EAAE,UAAuC,EAAE,IAAoB;oBACnG,IAAI,EAAE,GAAG,IAAI,CAAC;oBACd,EAAE,CAAC,UAAU,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBAC5C,EAAE,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;oBACvC,EAAE,CAAC,WAAW,GAAG;wBACb,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;oBACxC,CAAC,CAAC;oBAEF,EAAE,CAAC,KAAK,GAAG;wBACP,6EAA6E;wBAC7E,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE;6BACrB,IAAI,CAAC;4BACF,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;wBACrC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC;oBACF;;;;;sBAKE;oBACF,kBAAkB,IAAI,EAAE,IAAI,EAAE,OAAO;wBACjC,IAAI,KAAK,CAAC;wBACV,MAAM,CAAC;4BACH,IAAI,OAAO,GAAG,OAAO,EACjB,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BACjD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACvB,KAAK,GAAG,QAAQ,CAAC;gCACb,KAAK,GAAG,SAAS,CAAC;gCAClB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;4BAC9B,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;wBACnB,CAAC,CAAC;oBACN,CAAC;oBACD;;;sBAGE;oBACF,6BAA6B,KAAK;wBAC9B,MAAM,CAAC,QAAQ,CAAC;4BACZ,UAAU,CAAC,KAAK,CAAC;iCACZ,MAAM,EAAE;iCACR,IAAI,CAAC;gCACF,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,GAAG,UAAU,CAAC,CAAC;4BAC/C,CAAC,CAAC,CAAC;wBACX,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;oBAChB,CAAC;oBACD;;;sBAGE;oBACF,sBAAsB,KAAK;wBACvB,MAAM,CAAC;4BACH,6EAA6E;4BAC7E,UAAU,CAAC,KAAK,CAAC;iCACZ,MAAM,EAAE;iCACR,IAAI,CAAC;gCACF,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,GAAG,UAAU,CAAC,CAAC;4BAC/C,CAAC,CAAC,CAAC;wBACX,CAAC,CAAA;oBACL,CAAC;gBACL,CAAC;gBA9DM,wBAAO,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;gBA+DxD,uBAAC;YAAD,CAtEA,AAsEC,IAAA;YAED,OAAO;iBACF,MAAM,CAAC,kBAAkB,CAAC;iBAC1B,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;QAC1D,CAAC,EA5Ee,MAAM,GAAN,WAAM,KAAN,WAAM,QA4ErB;IAAD,CAAC,EA5EU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QA4Ed;AAAD,CAAC,EA5EM,GAAG,KAAH,GAAG,QA4ET","file":"app/core/common/common.controller.js","sourcesContent":["module app.core.common {\r\n    class CommonController {\r\n        toggleLeft: any;\r\n        toggleRight: any;\r\n        isOpenRight: any;\r\n        close: any;\r\n\r\n\r\n        static $inject = [\"$timeout\", \"$mdSidenav\", \"$log\"];\r\n\r\n        constructor($timeout: ng.ITimeoutService, $mdSidenav: ng.material.ISidenavService, $log: ng.ILogService) {\r\n            var vm = this;\r\n            vm.toggleLeft = buildDelayedToggler('left');\r\n            vm.toggleRight = buildToggler('right');\r\n            vm.isOpenRight = function () {\r\n                return $mdSidenav('right').isOpen();\r\n            };\r\n\r\n            vm.close = function () {\r\n                // Component lookup should always be available since we are not using `ng-if`\r\n                $mdSidenav('left').close()\r\n                    .then(function () {\r\n                        $log.debug(\"close LEFT is done\");\r\n                    });\r\n            };\r\n            /**\r\n            * @param {Function} func\r\n            * @param {number} wait\r\n            * @param {Object} context\r\n            * @returns The debounced function.\r\n            */\r\n            function debounce(func, wait, context) {\r\n                var timer;\r\n                return function debounced() {\r\n                    var context = context,\r\n                        args = Array.prototype.slice.call(arguments);\r\n                    $timeout.cancel(timer);\r\n                    timer = $timeout(function () {\r\n                        timer = undefined;\r\n                        func.apply(context, args);\r\n                    }, wait || 10);\r\n                };\r\n            }\r\n            /**\r\n            * @param {string} navID\r\n            * @returns The debounced function.\r\n            */\r\n            function buildDelayedToggler(navID) {\r\n                return debounce(function () {\r\n                    $mdSidenav(navID)\r\n                        .toggle()\r\n                        .then(function () {\r\n                            $log.debug(\"toggle \" + navID + \" is done\");\r\n                        });\r\n                }, 200, vm);\r\n            }\r\n            /**\r\n            * @param {string} navID\r\n            * @returns The sidenac service.\r\n            */\r\n            function buildToggler(navID) {\r\n                return function () {\r\n                    // Component lookup should always be available since we are not using `ng-if`\r\n                    $mdSidenav(navID)\r\n                        .toggle()\r\n                        .then(function () {\r\n                            $log.debug(\"toggle \" + navID + \" is done\");\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module(\"techtalkers.core\")\r\n        .controller(\"CommonController\", CommonController);\r\n}\r\n"],"sourceRoot":"/source/"}